<?xml version="1.0" encoding="UTF-8"?>
<!-- scan：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
 scanPeriod：设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒当scan为true时，此属性生效。默认的时间间隔为1分钟。 
 debug：当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
  -->
<configuration scan="false" scanPeriod="60 seconds" debug="true">
	<!-- 定义日志的根目录 -->
    <property name="LOG_HOME" value="D:/logs" />
    <!-- 定义日志文件名称 -->
    <property name="fileName" value="ssm-system"></property>
    
    <!-- ch.qos.logback.core.ConsoleAppender 表示控制台输出 -->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <Encoding>UTF-8</Encoding>
        <!-- %replace(%caller{1}){'\t|Caller.{1}0|\r\n', ''} -->
        <layout class="com.yang.common.log.MyPatternLayout">
			<pattern>%-5p %d{yyyy-MM-dd HH:mm:ss SSS} [ %T ] [ %c:%L ] - %m%n</pattern> 
        </layout>
    </appender>
    
    <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 --> 
	<appender name="fileLogAppender" class="ch.qos.logback.core.rolling.RollingFileAppender"> 
	    <Encoding>UTF-8</Encoding> 
	    <!-- 指定日志文件的名称 --> 
	    <file>${LOG_HOME}/${fileName}.log</file> 
	    <!-- 当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名
	     TimeBasedRollingPolicy： 最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责出发滚动。 --> 
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 滚动时产生的文件的存放位置及文件名称 %d{yyyy-MM-dd}：按天进行日志滚动 %i：当文件大小超过maxFileSize时，按照i进行文件滚动 --> 
			<fileNamePattern>${LOG_HOME}/${fileName}-%d{yyyy-MM-dd}-%i.log.zip</fileNamePattern> 
			<!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件。假设设置每天滚动， 且maxHistory是365，则只保存最近365天的文件，删除之前的旧文件。
		     	注意，删除旧文件是， 那些为了归档而创建的目录也会被删除。 --> 
			<MaxHistory>3</MaxHistory> 
			<!-- 当日志文件超过maxFileSize指定的大小是，根据上面提到的%i进行日志文件滚动 --> 
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> 
				<maxFileSize>20MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy> 
		</rollingPolicy> 
		<layout class="com.yang.common.log.MyPatternLayout"> 
			<pattern>%-5p %d{yyyy-MM-dd HH:mm:ss SSS} [ %T ] [ %c:%L ] - %m%n</pattern> 
		</layout> 
	</appender>
    
	<logger name="org.springframework" level="info"/>
	<logger name="org.mybatis" level="info"/>
	<logger name="com.alibaba" level="info"/>
    
    <root level="DEBUG">
        <appender-ref ref="stdout" />
        <appender-ref ref="fileLogAppender" />
    </root>
    
</configuration>